using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Basic_FOR : MonoBehaviour
{
    /*2021.08.14

    [1] 반복문 [for]

    반복문 for의 기본 형태 ->
    ㄴ for([변수 초기값];[조건식];[증감식]) {코드몸통}

     for 반복문은 사용된 변수의 값이 [조건식]을 만족하지 못할
    때까지 {코드 몸통}을 반복하는 키워드이다.

    설정해준 [증감식]에 따라서 [변수 초기값]이 반복시마다
    증가하거나 감소하며, 이 과정에서 조건식을 만족하지 못하는
    경우가 오게되면 반복문을 멈추고 완전히 탈출하게 된다.

    [2] 증감 연산자 [ ++ / -- ]

     증감 연사자는 해당되는 변수에 1을 더하거나, 혹은 빼주는
     역할을 수행한다.
     쉽게 말하자면 [ A = A + 1 / A = A - 1 ] 연산식으로 설명된다.

     */
     [SerializeField]
     int Main_Num;
     int c=0;
    void Start()
    {
        //[3] 반복문 기초활용.

        /* for(int A = 0; A < 10; A++)
         {
             //[1] A라는 변수를 선언하고, 초기값을 0으로 줄게.
             //[2] A는 반복문이 반복될때마다 1씩 증가할건데,
             //[3] A가 10 미만이 아니라면, 이 반복문을 탈출해.
             print("A =" + A);
         }

         print("반복문을 탈출했습니다.");


         //반복문 기초 활용 구구단 출력

         //[1] 구구단 9단을 9x1 ~ 9x9까지 차례대로
         // 출력해보세요.

        // for(int i = 1; i < 10; i++ )
        // {   

         //    print(Main_Num + " x " + i + " = " + (Main_Num * i));
        
    }*/

        //[4] 다중 반복문. [ 반복문 내에 반복문이 존재할 경우.]

        // for (int A = 0; A < 3; A++)
        // {
        //print("첫번째 반복문입니다."); //1
        //   print("A =" + A);

        //   for(int B = 0; B < 5; B++)
        //   {
        //print("두번째 반복문입니다.");//2
        //     print("B =" + B);
        //   }

        //  }

        // [다중 반복문 예제 1번]

        // 다중 반복문을 활용하여
        // 1단부터 9단까지 구구단을 차례대로 출력해보자.
        // 1x1 ~ 1x9 9x9까지

        //[다중 반복문 예제 2번]
        //위에서 출력했던 구구단을 
        //역순으로 출력해보자
        //9x9 ~ 9x1 1x1까지

        //[반복문 활용 추가예제]
        //1부터 1000까지의 숫자 중, 짝수의 합을 구하는
        //코드를 작성하시오. [ 필요한 변수는 자유롭게 선언 ]

        //  for(int A = 2; A < 10; A++)
        // {
        //   for(int B = 1; B < 10; B++)
        //  {
        //       print(A + " x " + B + " = " + (A * B));
        //  }
        // }

        // for (int A = 9; A > 1; A--)
        //  {
        //  for (int B = 9; B > 0; B--)
        //  {
        //      print(A + " x " + B + " = " + (A * B));
        // }
        // }

        for (int A = 0; A <= 1000; A++)
        {
            if (A % 2 == 0)
            {
                c += A;
            }

        }
        print("1부터 1000까지의 숫자 중, 짝수의 합은" + c);

    }
}
