using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Basic_Array : MonoBehaviour
{
    //2021. 08. 21

    //배열 ( Array )

    //배열이란?
    //같은 타입의 데이터를 하나의 공간에 묶어 관리하는 일종의
    //데이터들의 모임.

    //같은 타입의 변수를 여러개 선언하지 않아도 되기 때문에
    //서로 연관있는 데이터를 한곳에 모아두는데 효과적이다.

    //배열 사용 시 주의점.
    /* [1] 배열의 요소는 각각 번호를 가지는데, 배열의 첫 요소는,
     *     '1번'이 아닌 0부터 시작한다.
     *     예를 들어 길이가 3인 배열 요소는
     *     [0,1,2]로 총 3개 이다.
     * 
     * [2] 배열은 마지막으로 할당된 범위를 벗어날 수 없다.
     *     마지막으로 할당된 범위를 벗어난 배열 요소에 접근을 시도할 시,
     *     인덱스 범위 초과로 오류가 발생할 수 있다.
     *     
     *     ex) 길이가 5인 배열에서 [5번 요소]에 접근할 시
     *     6번째 요소에 접근을 시도하기 때문에 오류가 발생.
     *     { 0, 1, 2, 3, 4 }
     * 
     */
    //[1] 배열 선언 기본형 -> (데이터 타입)[] (변수명);
    int[] A;
    //int형 배열변수 A를 선언할게.
    //그런데, 이 배열의 길이는 아직 정해지지 않았어.

    //[1-1] 배열을 선언한 뒤, 빈 공간을 할당해주는 방법.
    int[] Array_int2 = new int[10];
    //1. int형 배열타입 변수  Array_int2를 선언하고,
    //2. 새로운 int형 공간 10개를 할당해주겠다.

    //해당 방법으로 배열크기를 할당할 시, 모든 요소에는 
    //null 또는 0이 초기화되어있기 때문에, 사용 전 
    //각 요소에 값을 할당해 줄 필요가 있다.

    //[1-2] 배열 선언과 동시에 각 요소를 초기화하기.
    int[] Array_int3 = { 5,4,3,2,1 };
    //1. int형 배열타입 변수 Array_int3를 선언하고,
    //2. 요소에 차례대로 5,4,3,2,1의 값을 초기화해주겠다.

    //해당 방식을 이용해 요소값을 직접 초기화해줄 경우,
    //배열의 길이는 초기화 받은 요소들의 총 갯수로 자동지정 된다.
    //(= Array_int3의 총 요소 수 = 5개)

    //'{중괄호}'를 사용하여 배열 요소의 값을 초기화하거나,
    // 할당하는 행동을 '유니폼 초기화'라고 칭한다.
    


    void Start()
    {
        //[2] 각 배열요소에 접근하는 방법.

        //[2-1]지정 배열 요소 접근하기
        print("Array_3의 세번째 요소값 = " + Array_int3[2]);

        //Array_3의 마지막 요소값을 출력해보세요.
        print("Array_3의 마지막 요소값 = " + Array_int3[4]);

        //[2-2] 배열의 총 요소 수를 반환해주는 Array.Length 키워드 
        print("Array_3의 총 요소 수 = " + Array_int3.Length);
        print("Array_2의 총 요소 수 = " + Array_int2.Length);

        print("Array_3의 마지막 요소값 = " + Array_int3[Array_int3.Length -1]);

        //[3] 모든 배열요소에 접근하여 각 값을 할당하거나 출력하기.

        for(int A = 0; A < Array_int3.Length; A++)
        {//A = 0 ~ 4
            print("Array_3의 " + (A + 1) + "번째 요소 : " + Array_int3[A]);

            if(Array_int3[A] == 3)
            {
                print("값이 3인 배열요소를 찾았습니다. 반복문을 종료합니다.");
                break;

                //break 키워드란?
                //조건문이나 반복문에서 반복 조건을 무시하고 실행되는 
                //시점에서 가장 가까운 반복문 하나를 탈출하는 키워드.
            }
        }

        for(int A = 0; A < Array_int2.Length; A++)
        {

            Array_int2[A] = (A+1) * 3;
            //각 요소값에 3의 배수를 할당해주겠다.

            print("Array_2의 " + (A + 1) + "번째 요소 : " + Array_int2[A]);

            
        }
    }

   
    void Update()
    {
        
    }
}
